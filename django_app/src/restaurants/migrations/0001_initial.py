# Generated by Django 4.2.7 on 2025-07-19 19:57

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Restaurant",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("slug", models.SlugField(blank=True, max_length=255, unique=True)),
                ("description", models.TextField(blank=True)),
                ("country", models.CharField(max_length=100)),
                ("city", models.CharField(max_length=100)),
                ("address", models.TextField()),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("website", models.URLField(blank=True)),
                (
                    "michelin_stars",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(3),
                        ],
                    ),
                ),
                ("michelin_guide_year", models.IntegerField(blank=True, null=True)),
                (
                    "rating",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=3,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("review_count", models.IntegerField(default=0)),
                ("cuisine_type", models.CharField(blank=True, max_length=100)),
                (
                    "price_range",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("$", "Budget"),
                            ("$$", "Moderate"),
                            ("$$$", "Expensive"),
                            ("$$$$", "Very Expensive"),
                        ],
                        max_length=20,
                    ),
                ),
                ("atmosphere", models.CharField(blank=True, max_length=100)),
                ("seating_capacity", models.IntegerField(blank=True, null=True)),
                ("has_private_dining", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("is_featured", models.BooleanField(default=False)),
                ("opening_hours", models.TextField(blank=True)),
                ("original_url", models.URLField(blank=True)),
                ("scraped_at", models.DateTimeField(blank=True, null=True)),
                ("scraped_content", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-michelin_stars", "-rating", "name"],
            },
        ),
        migrations.CreateModel(
            name="ScrapingJob",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("job_name", models.CharField(max_length=200)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("running", "Running"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("total_urls", models.IntegerField(default=0)),
                ("processed_urls", models.IntegerField(default=0)),
                ("successful_urls", models.IntegerField(default=0)),
                ("failed_urls", models.IntegerField(default=0)),
                ("results", models.JSONField(blank=True, default=dict)),
                ("error_log", models.TextField(blank=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MenuSection",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                ("order", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="menu_sections",
                        to="restaurants.restaurant",
                    ),
                ),
            ],
            options={
                "ordering": ["restaurant", "order", "name"],
            },
        ),
        migrations.CreateModel(
            name="MenuItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("price", models.CharField(blank=True, max_length=20)),
                ("is_vegetarian", models.BooleanField(default=False)),
                ("is_vegan", models.BooleanField(default=False)),
                ("is_gluten_free", models.BooleanField(default=False)),
                ("allergens", models.TextField(blank=True)),
                ("is_available", models.BooleanField(default=True)),
                ("is_signature", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "section",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="restaurants.menusection",
                    ),
                ),
            ],
            options={
                "ordering": ["section", "name"],
            },
        ),
        migrations.CreateModel(
            name="ImageScrapingJob",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("job_name", models.CharField(max_length=200)),
                (
                    "source_urls",
                    models.JSONField(
                        default=list, help_text="List of URLs to scrape images from"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("running", "Running"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("total_images_found", models.IntegerField(default=0)),
                ("images_processed", models.IntegerField(default=0)),
                ("images_downloaded", models.IntegerField(default=0)),
                ("images_categorized", models.IntegerField(default=0)),
                ("images_failed", models.IntegerField(default=0)),
                (
                    "max_images_per_url",
                    models.IntegerField(
                        default=20, help_text="Maximum images to scrape per URL"
                    ),
                ),
                (
                    "min_image_size",
                    models.IntegerField(
                        default=200, help_text="Minimum image size in pixels"
                    ),
                ),
                ("enable_ai_categorization", models.BooleanField(default=True)),
                ("results", models.JSONField(blank=True, default=dict)),
                ("error_log", models.TextField(blank=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="image_scraping_jobs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="restaurants.restaurant",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Chef",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("biography", models.TextField(blank=True)),
                (
                    "position",
                    models.CharField(
                        choices=[
                            ("head_chef", "Head Chef"),
                            ("executive_chef", "Executive Chef"),
                            ("sous_chef", "Sous Chef"),
                            ("pastry_chef", "Pastry Chef"),
                            ("chef_de_partie", "Chef de Partie"),
                        ],
                        max_length=100,
                    ),
                ),
                ("years_experience", models.IntegerField(blank=True, null=True)),
                ("awards", models.TextField(blank=True)),
                ("photo", models.ImageField(blank=True, upload_to="chefs/")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chefs",
                        to="restaurants.restaurant",
                    ),
                ),
            ],
            options={
                "ordering": ["restaurant", "position", "last_name"],
            },
        ),
        migrations.CreateModel(
            name="RestaurantReview",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
                (
                    "rating",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("visit_date", models.DateField(blank=True, null=True)),
                ("is_approved", models.BooleanField(default=False)),
                ("is_featured", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="restaurants.restaurant",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "unique_together": {("restaurant", "user")},
            },
        ),
        migrations.CreateModel(
            name="RestaurantImage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("image", models.ImageField(blank=True, upload_to="restaurants/")),
                (
                    "source_url",
                    models.URLField(
                        blank=True,
                        help_text="Original URL where the image was scraped from",
                    ),
                ),
                ("caption", models.CharField(blank=True, max_length=200)),
                ("alt_text", models.CharField(blank=True, max_length=255)),
                (
                    "ai_category",
                    models.CharField(
                        choices=[
                            ("scenery_ambiance", "Scenery/Ambiance/Dining"),
                            ("menu_item", "Menu Item"),
                            ("uncategorized", "Uncategorized"),
                        ],
                        default="uncategorized",
                        help_text="AI-determined primary category",
                        max_length=50,
                    ),
                ),
                (
                    "ai_labels",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="AI-generated descriptive labels (e.g., ['mountain views', 'outdoor terrace', 'romantic lighting'])",
                    ),
                ),
                (
                    "ai_description",
                    models.TextField(
                        blank=True,
                        help_text="AI-generated detailed description of what's in the image",
                    ),
                ),
                (
                    "category_confidence",
                    models.FloatField(
                        default=0.0,
                        help_text="AI confidence score for category classification",
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                (
                    "description_confidence",
                    models.FloatField(
                        default=0.0,
                        help_text="AI confidence score for description accuracy",
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                (
                    "image_type",
                    models.CharField(
                        choices=[
                            ("exterior", "Exterior"),
                            ("interior", "Interior"),
                            ("food", "Food"),
                            ("chef", "Chef"),
                            ("staff", "Staff"),
                            ("event", "Event"),
                            ("scenery", "Scenery"),
                            ("dining_room", "Dining Room"),
                            ("ambiance", "Ambiance"),
                        ],
                        default="interior",
                        max_length=50,
                    ),
                ),
                (
                    "processing_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("processing_error", models.TextField(blank=True)),
                ("width", models.IntegerField(blank=True, null=True)),
                ("height", models.IntegerField(blank=True, null=True)),
                (
                    "file_size",
                    models.IntegerField(
                        blank=True, help_text="File size in bytes", null=True
                    ),
                ),
                ("order", models.IntegerField(default=0)),
                ("is_featured", models.BooleanField(default=False)),
                (
                    "is_menu_highlight",
                    models.BooleanField(
                        default=False, help_text="Is this a standout menu item image?"
                    ),
                ),
                (
                    "is_ambiance_highlight",
                    models.BooleanField(
                        default=False,
                        help_text="Is this a standout ambiance/scenery image?",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="restaurants.restaurant",
                    ),
                ),
            ],
            options={
                "ordering": ["restaurant", "order", "-created_at"],
                "indexes": [
                    models.Index(
                        fields=["restaurant", "ai_category"],
                        name="restaurants_restaur_aac2d9_idx",
                    ),
                    models.Index(
                        fields=["processing_status"],
                        name="restaurants_process_4be90f_idx",
                    ),
                    models.Index(
                        fields=[
                            "is_featured",
                            "is_menu_highlight",
                            "is_ambiance_highlight",
                        ],
                        name="restaurants_is_feat_41a87f_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="restaurant",
            index=models.Index(
                fields=["country", "city"], name="restaurants_country_4b7091_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="restaurant",
            index=models.Index(
                fields=["michelin_stars"], name="restaurants_micheli_18557c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="restaurant",
            index=models.Index(
                fields=["cuisine_type"], name="restaurants_cuisine_01615e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="restaurant",
            index=models.Index(
                fields=["is_active", "is_featured"],
                name="restaurants_is_acti_cd5575_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="menusection",
            unique_together={("restaurant", "name")},
        ),
    ]
